{"title":"flagstore.apk移动逆向writeup","slug":"flagstore.apk移动逆向writeup","date":"2017-10-10T14:10:35.000Z","updated":"2019-09-12T06:22:47.000Z","comments":true,"path":"api/articles/flagstore.apk移动逆向writeup.json","photos":[],"link":"","excerpt":null,"covers":null,"content":"<p> <a href=\"http://creativecommons.org/licenses/by-sa/4.0/\" target=\"_blank\" rel=\"noopener\"> </a> 版权声明：本文为博主原创文章，遵循<a href=\"http://creativecommons.org/licenses/by-sa/4.0/\" target=\"_blank\" rel=\"noopener\"> CC 4.0 BY-SA </a>版权协议，转载请附上原文出处链接和本声明。  本文链接：<a href=\"https://blog.csdn.net/s1054436218/article/details/78198257\" target=\"_blank\" rel=\"noopener\">https://blog.csdn.net/s1054436218/article/details/78198257</a>   </p>\n<p>   世安杯遇到的一道逆向题，感觉还挺有意思的，解决问题中遇到了很多问题（其实是装工具时碰到的问题），贴出来跟大家共享一下。</p>\n<p> 题目可以在这个地址下载：</p>\n<p> 链接：<a href=\"http://pan.baidu.com/s/1qYv7ALA\" target=\"_blank\" rel=\"noopener\">http://pan.baidu.com/s/1qYv7ALA</a> 密码：rg7d  </p>\n<p> 首先用jadx-gui查看一下java代码，MainActivity中代码如下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">package com.flagstore.ctf.flagstore;</span><br><span class=\"line\"></span><br><span class=\"line\">import android.app.Activity;</span><br><span class=\"line\">import android.content.IntentFilter;</span><br><span class=\"line\">import android.os.Bundle;</span><br><span class=\"line\">import android.widget.TextView;</span><br><span class=\"line\">import com.flagstore.ctf.flagstore.Manifest.permission;</span><br><span class=\"line\"></span><br><span class=\"line\">public class MainActivity extends Activity &#123;</span><br><span class=\"line\">    protected void onCreate(Bundle savedInstanceState) &#123;</span><br><span class=\"line\">        super.onCreate(savedInstanceState);</span><br><span class=\"line\">        TextView tv = new TextView(getApplicationContext());</span><br><span class=\"line\">        tv.setText(&quot;To-do: UI pending&quot;);</span><br><span class=\"line\">        setContentView(tv);</span><br><span class=\"line\">        IntentFilter filter = new IntentFilter();</span><br><span class=\"line\">        filter.addAction(&quot;com.flagstore.ctf.INCOMING_INTENT&quot;);</span><br><span class=\"line\">        registerReceiver(new Send_to_Activity(), filter, permission._MSG, null);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n<p>它一开始就是把程序的界面弄成一个文本：”To-do: UI pending”，然后设置了一个Broadcast监听，关于Brocast机制，可以看这个文章：</p>\n<p> <a href=\"http://www.cnblogs.com/playing/archive/2011/03/23/1992030.html\" target=\"_blank\" rel=\"noopener\">http://www.cnblogs.com/playing/archive/2011/03/23/1992030.html</a>  </p>\n<p> 然后我们再看Send_to_Activity这个类：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">package com.flagstore.ctf.flagstore;</span><br><span class=\"line\"></span><br><span class=\"line\">import android.content.BroadcastReceiver;</span><br><span class=\"line\">import android.content.Context;</span><br><span class=\"line\">import android.content.Intent;</span><br><span class=\"line\">import android.util.Log;</span><br><span class=\"line\">import android.widget.Toast;</span><br><span class=\"line\"></span><br><span class=\"line\">public class Send_to_Activity extends BroadcastReceiver &#123;</span><br><span class=\"line\">    public void onReceive(Context context, Intent intent) &#123;</span><br><span class=\"line\">        if (intent.getStringExtra(&quot;msg&quot;).equalsIgnoreCase(&quot;OpenSesame&quot;)) &#123;</span><br><span class=\"line\">            Log.d(&quot;Here&quot;, &quot;Intent&quot;);</span><br><span class=\"line\">            context.startActivity(new Intent(context, CTFReceiver.class));</span><br><span class=\"line\">            return;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        Toast.makeText(context, &quot;Ah, ah, ah, you didn&apos;t say the magic word!&quot;, 1).show();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<p> 代码的意思很简单，就是如果受到msg为OpenSesame的话，就会激活CTFReceiver这个类： </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">package com.flagstore.ctf.flagstore;</span><br><span class=\"line\"></span><br><span class=\"line\">import android.content.Intent;</span><br><span class=\"line\">import android.os.Bundle;</span><br><span class=\"line\">import android.support.v7.app.AppCompatActivity;</span><br><span class=\"line\">import android.view.View;</span><br><span class=\"line\">import android.view.View.OnClickListener;</span><br><span class=\"line\">import android.widget.Button;</span><br><span class=\"line\">import android.widget.TextView;</span><br><span class=\"line\"></span><br><span class=\"line\">public class CTFReceiver extends AppCompatActivity &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    class C01581 implements OnClickListener &#123;</span><br><span class=\"line\">        C01581() &#123;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        public void onClick(View v) &#123;</span><br><span class=\"line\">            Intent intent = new Intent();</span><br><span class=\"line\">            intent.setAction(&quot;com.flagstore.ctf.OUTGOING_INTENT&quot;);</span><br><span class=\"line\">            String a = CTFReceiver.this.getResources().getString(C0159R.string.str3) + &quot;fpcMpwfFurWGlWu`uDlUge&quot;;</span><br><span class=\"line\">            String b = Utilities.doBoth(CTFReceiver.this.getResources().getString(C0159R.string.passphrase));</span><br><span class=\"line\">            String name = getClass().getName().split(&quot;\\\\.&quot;)[4];</span><br><span class=\"line\">            intent.putExtra(&quot;msg&quot;, CTFReceiver.this.getPhrase(a, b, Utilities.doBoth(name.substring(0, name.length() - 2))));</span><br><span class=\"line\">            CTFReceiver.this.sendBroadcast(intent);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    public native String getFlag(String str, String str2, String str3);</span><br><span class=\"line\"></span><br><span class=\"line\">    public native String getPhrase(String str, String str2, String str3);</span><br><span class=\"line\"></span><br><span class=\"line\">    protected void onCreate(Bundle savedInstanceState) &#123;</span><br><span class=\"line\">        super.onCreate(savedInstanceState);</span><br><span class=\"line\">        new TextView(this).setText(&quot;Clever Person!&quot;);</span><br><span class=\"line\">        Button button = new Button(this);</span><br><span class=\"line\">        button.setText(&quot;Broadcast&quot;);</span><br><span class=\"line\">        setContentView((View) button);</span><br><span class=\"line\">        button.setOnClickListener(new C01581());</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    static &#123;</span><br><span class=\"line\">        System.loadLibrary(&quot;native-lib&quot;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n<p> 逻辑大概就是一旦这个被激活，点击一下按钮，他就会发一个广播，于是我们的一个解决思路就是：打开APP后发送一个广播为“OpenSesame”，然后再监听接收。 </p>\n<p> 然后用到一些工具：</p>\n<p> <a href=\"https://github.com/mwrlabs/drozer\" target=\"_blank\" rel=\"noopener\">drozer</a>  </p>\n<p> <a href=\"http://www.genymotion.net/\" target=\"_blank\" rel=\"noopener\">Genymotion</a>  </p>\n<p> 两个工具安装过程中都遇到了一些问题，Genymotion在网上有很多安装教程，说两个值得一提的问题吧：</p>\n<p> 1、因为Genymotion需要安装Vritualbox作为依赖，但是Vritualbox可能会提示你缺少headrs，但是你apt-get不到，网上的教程中没有几个提到的，直接搜这个问题也有很多让你apt-get的，但这其实是内核问题，你需要升级一下内核，再安装一下headers，具体操作如下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">apt-cache search linux-image|grep kali</span><br></pre></td></tr></table></figure>\n\n\n<p> 然后就获得了一个内核列表，我这边结果如下： </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">linux-headers-4.13.0-kali1-amd64 - Header files for Linux 4.13.0-kali1-amd64</span><br><span class=\"line\">linux-image-4.13.0-kali1-amd64 - Linux 4.13 for 64-bit PCs</span><br><span class=\"line\">linux-image-4.13.0-kali1-amd64-dbg - Debug symbols for linux-image-4.13.0-kali1-amd64</span><br><span class=\"line\">linux-headers-4.13.0-kali1-686 - Header files for Linux 4.13.0-kali1-686</span><br><span class=\"line\">linux-headers-4.13.0-kali1-686-pae - Header files for Linux 4.13.0-kali1-686-pae</span><br><span class=\"line\">linux-image-4.13.0-kali1-686 - Linux 4.13 for older PCs</span><br><span class=\"line\">linux-image-4.13.0-kali1-686-dbg - Debug symbols for linux-image-4.13.0-kali1-686</span><br><span class=\"line\">linux-image-4.13.0-kali1-686-pae - Linux 4.13 for modern PCs</span><br><span class=\"line\">linux-image-4.13.0-kali1-686-pae-dbg - Debug symbols for linux-image-4.13.0-kali1-686-pae</span><br><span class=\"line\">linux-image-4.6.0-kali1-amd64 - Linux 4.6 for 64-bit PCs</span><br><span class=\"line\">linux-headers-4.12.0-kali2-amd64 - Header files for Linux 4.12.0-kali2-amd64</span><br><span class=\"line\">linux-image-4.12.0-kali2-amd64 - Linux 4.12 for 64-bit PCs</span><br></pre></td></tr></table></figure>\n\n\n<p> 然后apt-get一下一样版本号和32位或64位的headrs和image，比如： </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">apt-get install linux-headers-4.13.0-kali1-amd64</span><br><span class=\"line\">apt-get install linux-image-4.13.0-kali1-amd64</span><br></pre></td></tr></table></figure>\n\n\n<p> 然后重启一下，就可以了。 </p>\n<p> 2、第二个问题解决比较简单，它说你的CPU不支持虚拟化，这个问题是在虚拟机中运行时会遇到的问题，在设置—处理器的虚拟化模式里选择虚拟化 Intel VT-x/EPT 或 AMD-V/RVI，就解决了。</p>\n<p> drozer遇到的问题其实挺脑残的，按照readme中的方法安装完依赖包并且build以后，它很多文件夹都是隐藏的，于是我当时挺懵逼的，以为没生成，其实生成的就是你python setup.py xxx,安装文件就在xxx目录里，然后安装就行了。</p>\n<p> 随便下载一个安卓手机的虚拟机，然后运行，用adb查看并注入devices：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">root@kali: adb devices</span><br><span class=\"line\">List of devices attached</span><br><span class=\"line\">192.168.57.101:5555\tdevice</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<p> 工具安装就可以来秒这道题了，首先build一下drozer的agent，就是放在安卓虚拟机中监听的软件：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/opt/genymobile/genymotion# drozer agent build</span><br><span class=\"line\">I: Using Apktool 2.2.4 on standard-agent.apk</span><br><span class=\"line\">……</span><br><span class=\"line\">Done: /tmp/xxxxxx/agent.apk</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<p> 然后直接adb install一波，题目和agent.apk: </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">root@kali:adb install /tmp/xxxxxx/agent.apk</span><br><span class=\"line\">Success</span><br><span class=\"line\">root@kali:adb install flagstore.apk</span><br><span class=\"line\">Success</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p> 然后在手机中打开agent，然后连接一下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">root@kali:adb forward tcp:31415 tcp:31415</span><br><span class=\"line\">root@kali:drozer console connect</span><br><span class=\"line\">Selecting 505c86a4845f7221 (Genymotion Samsung Galaxy S8 - 7.0.0 - API 24 - 1440x2960 7.0)</span><br><span class=\"line\"></span><br><span class=\"line\">            ..                    ..:.</span><br><span class=\"line\">           ..o..                  .r..</span><br><span class=\"line\">            ..a..  . ....... .  ..nd</span><br><span class=\"line\">              ro..idsnemesisand..pr</span><br><span class=\"line\">              .otectorandroidsneme.</span><br><span class=\"line\">           .,sisandprotectorandroids+.</span><br><span class=\"line\">         ..nemesisandprotectorandroidsn:.</span><br><span class=\"line\">        .emesisandprotectorandroidsnemes..</span><br><span class=\"line\">      ..isandp,..,rotectorandro,..,idsnem.</span><br><span class=\"line\">      .isisandp..rotectorandroid..snemisis.</span><br><span class=\"line\">      ,andprotectorandroidsnemisisandprotec.</span><br><span class=\"line\">     .torandroidsnemesisandprotectorandroid.</span><br><span class=\"line\">     .snemisisandprotectorandroidsnemesisan:</span><br><span class=\"line\">     .dprotectorandroidsnemesisandprotector.</span><br><span class=\"line\"></span><br><span class=\"line\">drozer Console (v2.4.3)</span><br><span class=\"line\">dz&gt; run app.broadcast.sniff --action &quot;com.flagstore.ctf.OUTGOING_INTENT&quot;</span><br></pre></td></tr></table></figure>\n\n<p>然后在新窗口中发送广播： </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">root@kali: adb shell</span><br><span class=\"line\">vbox86p:/ # su</span><br><span class=\"line\">vbox86p:/ # -a &quot;com.flagstore.ctf.INCOMING_INTENT&quot; --es msg &quot;OpenSesame&quot;</span><br></pre></td></tr></table></figure>\n\n<p>然后旧窗口就收到了flag： </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Action: com.flagstore.ctf.OUTGOING_INTENT</span><br><span class=\"line\">Raw: Intent &#123; act=com.flagstore.ctf.OUTGOING_INTENT flg=0x10 (has extras) &#125;</span><br><span class=\"line\">Extra: msg=CongratsGoodWorkYouFoundItIHopeYouUsedADBFlag:TheseIntentsAreFunAndEasyToUse (java.lang.String)</span><br></pre></td></tr></table></figure>\n\n\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n","categories":[],"tags":[{"name":"CSDN迁移","slug":"CSDN迁移","count":25,"path":"api/tags/CSDN迁移.json"}]}