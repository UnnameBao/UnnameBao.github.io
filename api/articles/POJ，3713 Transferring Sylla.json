{"title":"POJ，3713 Transferring Sylla","slug":"POJ，3713 Transferring Sylla","date":"2017-05-08T09:47:08.000Z","updated":"2019-09-12T06:22:21.000Z","comments":true,"path":"api/articles/POJ，3713 Transferring Sylla.json","photos":[],"link":"","excerpt":null,"covers":null,"content":"<p> <a href=\"http://creativecommons.org/licenses/by-sa/4.0/\" target=\"_blank\" rel=\"noopener\"> </a> 版权声明：本文为博主原创文章，遵循<a href=\"http://creativecommons.org/licenses/by-sa/4.0/\" target=\"_blank\" rel=\"noopener\"> CC 4.0 BY-SA </a>版权协议，转载请附上原文出处链接和本声明。  本文链接：<a href=\"https://blog.csdn.net/s1054436218/article/details/71426441\" target=\"_blank\" rel=\"noopener\">https://blog.csdn.net/s1054436218/article/details/71426441</a>   </p>\n<p>   题意：重新夺得Sylla之后，公司决定加强安保系统，就是建个运输网络，General要求这个网络必须满足每两个城市之间至少有三条独立的路线。（越看越像prison break）现在给你城市的坐标，让你判断合不合规定，复核规定就输出YES，不然就输出NO</p>\n<p> 思路：检查样例是不是三通路，其实就是把每个点去掉以后看看剩下的点有没有割点，如果有割点就是单通路，不符合规定，如果没有割点，就输是正确的。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#include &lt;iostream&gt;</span><br><span class=\"line\">#include &lt;algorithm&gt;</span><br><span class=\"line\">#include &lt;cstring&gt;</span><br><span class=\"line\">#include &lt;vector&gt;</span><br><span class=\"line\">using namespace std;</span><br><span class=\"line\">vector&lt;int&gt; N[505];</span><br><span class=\"line\">int Nsize,Msize;</span><br><span class=\"line\">int Low[505],Dfn[505],visit[505];</span><br><span class=\"line\">int depthn,root;</span><br><span class=\"line\">bool flag;</span><br><span class=\"line\">inline int min(int a,int b)&#123;return a&lt;b?a:b;&#125;</span><br><span class=\"line\">void dfs(int p,int fa)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    int tol=0,v;</span><br><span class=\"line\">    visit[p]=1;</span><br><span class=\"line\">    Dfn[p]=Low[p]=depthn++;</span><br><span class=\"line\">    for(vector&lt;int&gt;::iterator it=N[p].begin();it!=N[p].end();it++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        v=*it;</span><br><span class=\"line\">        if(visit[v]==2) continue;</span><br><span class=\"line\">        if(visit[v]==0)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            dfs(v,p);tol++;</span><br><span class=\"line\">            Low[p]=min(Low[p],Low[v]);</span><br><span class=\"line\">            if((p==root&amp;&amp;tol&gt;1)||(p!=root&amp;&amp;Low[v]&gt;=Dfn[p]))</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                flag=true;</span><br><span class=\"line\">                return ;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        else if(visit[v]==1&amp;&amp;v!=fa)</span><br><span class=\"line\">            Low[p]=min(Low[p],Dfn[v]);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">int main()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    cin.sync_with_stdio(false);</span><br><span class=\"line\">    while(cin&gt;&gt;Nsize&gt;&gt;Msize&amp;&amp;(Nsize||Msize))</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        int temp1,temp2;</span><br><span class=\"line\">        memset(Low,0,sizeof(Low));</span><br><span class=\"line\">        memset(Dfn,0,sizeof(Dfn));</span><br><span class=\"line\">        flag=false;</span><br><span class=\"line\">        for(int i=0;i&lt;Msize;i++)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            cin&gt;&gt;temp1&gt;&gt;temp2;</span><br><span class=\"line\">            N[temp1].push_back(temp2);</span><br><span class=\"line\">            N[temp2].push_back(temp1);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        for(int i=0;i&lt;Nsize;i++)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            memset(visit,0,sizeof(visit));</span><br><span class=\"line\">            visit[i]=2;</span><br><span class=\"line\">            root=0;depthn=0;</span><br><span class=\"line\">            if(i==0) root=1;</span><br><span class=\"line\">            dfs(root,-1);</span><br><span class=\"line\">            for(int j=0;j&lt;Nsize;j++)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                if(visit[j]==0)</span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    flag=true;</span><br><span class=\"line\">                    break;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            if(flag)</span><br><span class=\"line\">                break;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        if(!flag)</span><br><span class=\"line\">            cout&lt;&lt;&quot;YES\\n&quot;;</span><br><span class=\"line\">        else</span><br><span class=\"line\">            cout&lt;&lt;&quot;NO\\n&quot;;</span><br><span class=\"line\">        for(int i=0;i&lt;Nsize;i++)</span><br><span class=\"line\">            N[i].clear();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    return 0;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n\n","categories":[],"tags":[{"name":"CSDN迁移","slug":"CSDN迁移","count":25,"path":"api/tags/CSDN迁移.json"}]}