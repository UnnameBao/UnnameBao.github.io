{"title":"初探Windows域2——NTML协议和Kerberos协议基础","slug":"WindowsDomain_2","date":"2021-03-07T12:10:15.000Z","updated":"2021-03-07T14:02:23.639Z","comments":true,"path":"api/articles/WindowsDomain_2.json","photos":[],"link":"","excerpt":" Active DirectoryActive Directory存储了有关网络对象的信息，并且让管理员和用 户能够轻松地查找和使用这些信息。Active Directory使用了一种 结构化的数据存储方式，并以此作为基础对目录信息进行合乎逻 辑的分层组织。网络对象分为:用户、用户组、计算机、域、组织单位以及安全策略等。","covers":["../static/images/image-20210307201435143.png","../static/images/image-20210307213342753.png"],"content":"<h1 id=\"active-directory\"><a class=\"markdownIt-Anchor\" href=\"#active-directory\"></a> Active Directory</h1>\n<p>Active Directory存储了有关网络对象的信息，并且让管理员和用 户能够轻松地查找和使用这些信息。Active Directory使用了一种 结构化的数据存储方式，并以此作为基础对目录信息进行合乎逻 辑的分层组织。</p>\n<p>网络对象分为:用户、用户组、计算机、域、组织单位以及安全策略等。</p>\n<span id=\"more\"></span>\n<h2 id=\"域\"><a class=\"markdownIt-Anchor\" href=\"#域\"></a> 域</h2>\n<blockquote>\n<p>域（Domain）是AD的根，是AD的管理单位。域中包含着大量的域对象，如：组织单位(Organizational Unit)，组(Group)，用户(User)，计算机(Computer)，联系人(Contact),打印机，安全策略等。</p>\n</blockquote>\n<h2 id=\"组织单位\"><a class=\"markdownIt-Anchor\" href=\"#组织单位\"></a> 组织单位</h2>\n<blockquote>\n<p>组织单位简称为OU是一个容器对象，可以把域中的对象组织成逻辑组，帮助网络管理员简化管理组。组织单位可以包含下列类型的对象：用户，计算机，工作组，打印机，安全策略，其他组织单位等。可以在组织单位基础上部署组策略，统一管理组织单位中的域对象。</p>\n</blockquote>\n<h2 id=\"群组\"><a class=\"markdownIt-Anchor\" href=\"#群组\"></a> 群组</h2>\n<blockquote>\n<p>群组是一批具有相同管理任务的用户账户，计算机账户或者其他域对象的一个集合。例如公司的开发组，产品组，运维组等等。</p>\n<p>群组类型分为两类:</p>\n<p><strong>安全组</strong>：用来设置有安全权限相关任务的用户或者计算机账户的集合。比如：Tiger组都可以登录并访问某ftp地址，并拿到某个文件。</p>\n<p><strong>通讯组</strong>：用于用户之间通信的组，适用通信组可以向一组用户发送电子邮件。比如：我要向团队内10为成员都发送同一封邮件这里就要抄送9次，而使用组的话我直接可以发送给@Tiger，所有Tiger组内的成员都会收到邮件。</p>\n</blockquote>\n<h2 id=\"用户\"><a class=\"markdownIt-Anchor\" href=\"#用户\"></a> <strong>用户</strong></h2>\n<blockquote>\n<p>AD中域用户是最小的管理单位，域用户最容易管理又最难管理，如果赋予域用户的权限过大，将带来安全隐患，如果权限过小域用户无法正常工作。</p>\n<p>域用户的类型，域中常见用户类型分为：</p>\n<p>普通域用户:创建的域用户默认就添加到&quot;Domain Users&quot;中。</p>\n<p>域管理员:普通域用户添加进&quot;Domain Admins&quot;中，其权限升为域管理员。</p>\n<p>企业管理员:普通域管理员添加进&quot;Enterprise Admins&quot;后，其权限提升为企业管理员，企业管理员具有最高权限。</p>\n</blockquote>\n<p><img src=\"../static/images/image-20210307201435143.png\" alt=\"image-20210307201435143\" /></p>\n<h1 id=\"ntml协议\"><a class=\"markdownIt-Anchor\" href=\"#ntml协议\"></a> NTML协议</h1>\n<p>NTML协议包括以下三个步骤：</p>\n<blockquote>\n<ol>\n<li>协商：确认协议版本</li>\n<li>质询：客户端向服务器发送包含用户名的请求，服务器产生16位随机数作为Challenge，然后使用NTLM Hash对该随机数加密作为Challenge1存入内存，然后把Challenge返回给客户端</li>\n<li>验证：客户端使用NTLM Hash对Challenge加密作为Response，然后把Response发送给服务器，服务器将Response与Challenge1作比较，相等的话认证成功。</li>\n</ol>\n</blockquote>\n<p>NTML v1 与 HTML v2 的区别：</p>\n<blockquote>\n<p>HTML v1 的Challenge是8位，HTML v2 的Challenge是16位</p>\n<p>HTML v1 使用DES加密， HTML v2使用HMAC-MD5加密</p>\n</blockquote>\n<h1 id=\"kerberos\"><a class=\"markdownIt-Anchor\" href=\"#kerberos\"></a> Kerberos</h1>\n<p>​\tKerberos 是一种网络认证协议，其设计目标是通过密钥系统为客 户机 / 服务器应用程序提供强大的认证服务。其作为一 种可信任的第三方认证服务，是通过传统的密码技术(如:共享 密钥)执行认证服务的。</p>\n<h2 id=\"kerberos的三大要素\"><a class=\"markdownIt-Anchor\" href=\"#kerberos的三大要素\"></a> <strong>Kerberos的三大要素</strong></h2>\n<ul>\n<li>Client</li>\n<li>Server</li>\n<li>KDC(Key Distribution Center) = DC(Domain Controller)</li>\n</ul>\n<h2 id=\"域认证流程\"><a class=\"markdownIt-Anchor\" href=\"#域认证流程\"></a> 域认证流程</h2>\n<h3 id=\"1-client-kdc\"><a class=\"markdownIt-Anchor\" href=\"#1-client-kdc\"></a> 1. client -&gt; KDC</h3>\n<p>请求包括： client info<br />\nKDC产生一个32位随机数Session Key，先使用client info对应的NTLM Hash对Session Key加密（Client可解）作为AS ，再使用krbtgt用户的NTLM Hash对Session Key和client info加密作为TGT（只有KDC可解）</p>\n<p>client接受到AS和TGT，然后使用用户名对应的NTLM Hash对AS解密获取Session Key。</p>\n<p><img src=\"../static/images/image-20210307213342753.png\" alt=\"image-20210307213342753\" /></p>\n<h3 id=\"2-client-kdc\"><a class=\"markdownIt-Anchor\" href=\"#2-client-kdc\"></a> 2. client -&gt; KDC</h3>\n<p>请求包括：TGT，SessionKey 加密client info和时间戳（暂称Cipher1）</p>\n<p>KDC使用krbtgt用户的HTLM Hash对TGT进行解密，获取到Session Key和client info，通过client info获取到对应的NTLM Hash。KDC使用SessionKey对Cipher1解密，获取到client info和时间戳，然后校验是否过期以及与TGT的client info对比，都满足的话认证通过。</p>\n<p>认证通过后，产生一个Server Session，随后使用服务器的HTLM Hash对ServerSessionKey+client info+end time加密作为Ticket，然后使用SessionKey对Client info和时间戳加密（暂称Cipher2）。随后把Ticket+Cipher2发送给Client。</p>\n<h3 id=\"3-client-server\"><a class=\"markdownIt-Anchor\" href=\"#3-client-server\"></a> 3. client -&gt; Server</h3>\n<p>Client使用Ticket和Cipher2访问 Server，Server使用Server的HTLM Hash对Ticket解密，获取client info和ServerSessionKey，然后使用ServerSessionKey对Cipher2解密，获取client info，比较两个client info，相同则认证完成。</p>\n<p>注意：</p>\n<blockquote>\n<p>所有NTLM Hash 都存与AD中</p>\n<p>若攻击者获取了Server NTLM Hash，可构造白银票据</p>\n<p>若攻击者获取了krbtgt用户的NTLM Hash， 可构造黄金票据</p>\n</blockquote>\n<h1 id=\"白银票据\"><a class=\"markdownIt-Anchor\" href=\"#白银票据\"></a> 白银票据</h1>\n<h2 id=\"特点\"><a class=\"markdownIt-Anchor\" href=\"#特点\"></a> 特点</h2>\n<blockquote>\n<p>不与KDC交互</p>\n<p>必须获取到Server HTLM Hash</p>\n<p>只能攻击已知Server HTLM Hash的主机</p>\n</blockquote>\n<h2 id=\"原理\"><a class=\"markdownIt-Anchor\" href=\"#原理\"></a> 原理</h2>\n<p>在Kerberos认证的第三步中，Server事先并不知道ServerSessionKey是多少，而是通过自己的HTLM Hash解密出来的，因此攻击者只需知道Server的HTLM Hash，就可以完成攻击。白银票据只能针对服务器上的某些服务进行伪造，列表如下：</p>\n<table>\n<thead>\n<tr>\n<th>服务注释</th>\n<th>服务名</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>WMI</td>\n<td>HOST、RPCSS</td>\n</tr>\n<tr>\n<td>Powershell Remoteing</td>\n<td>HOST、HTTP</td>\n</tr>\n<tr>\n<td>WinRM</td>\n<td>HOST、HTTP</td>\n</tr>\n<tr>\n<td>Scheduled Tasks</td>\n<td>HOST</td>\n</tr>\n<tr>\n<td>LDAP 、DCSync</td>\n<td>LDAP</td>\n</tr>\n<tr>\n<td>Windows File Share (CIFS)</td>\n<td>CIFS</td>\n</tr>\n<tr>\n<td>Windows Remote ServerAdministration Tools</td>\n<td>RPCSS、LDAP、CIFS</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"防御\"><a class=\"markdownIt-Anchor\" href=\"#防御\"></a> 防御</h2>\n<p>​\t将注册表中HKEY_LOCAL_MACHINE\\SYSTEM \\ CurrentControlSet\\Control\\Lsa\\Kerberos\\Parameters的ValidateKdcPacSignature设置为1即可开启PAC认证。</p>\n<p>​\t开启PAC认证后，服务器将会把ServerSessionKey传到Server中再校验一次。</p>\n<h1 id=\"黄金票据\"><a class=\"markdownIt-Anchor\" href=\"#黄金票据\"></a> 黄金票据</h1>\n<h2 id=\"特点-2\"><a class=\"markdownIt-Anchor\" href=\"#特点-2\"></a> 特点</h2>\n<blockquote>\n<p>与KDC交互</p>\n<p>必须获取到krbtgt用户的NTLM Hash</p>\n<p>可以攻击全域所有用户</p>\n</blockquote>\n<h2 id=\"原理-2\"><a class=\"markdownIt-Anchor\" href=\"#原理-2\"></a> 原理</h2>\n<p>​\t从第一步中就可以从TGT中使用krbtgt的NTLM Hash获取到Session Key，随后的步骤都可以操控。</p>\n<h1 id=\"tickets总结\"><a class=\"markdownIt-Anchor\" href=\"#tickets总结\"></a> Tickets总结</h1>\n<ul>\n<li>黄金票据：从攻击面来看，获取krbtgt用户的hash后，可以在域中进行持久性的隐藏，且日志无法溯源。</li>\n<li>从防御角度来看，需要经常更新krbtgt的密码，才能够使得原有的票据失效。最根本的办法是不允许域管账户登录其他服务器。</li>\n<li>白银票据：从攻击面来看，伪造白银票据的难度比伪造黄金票据的难度较小，因为一个域中的服务器如果对外的话，非常容易被入侵，并且容易被转储Server。</li>\n<li>从防御角度来看，需要开启PAC认证，但这会降低认证效率，增加 DC的负担，最根本的还是要加固服务器本身对外的服务。</li>\n</ul>\n<h1 id=\"reference\"><a class=\"markdownIt-Anchor\" href=\"#reference\"></a> Reference</h1>\n<p>[1] <a href=\"https://www.cnblogs.com/-qing-/p/11349134.html\">https://www.cnblogs.com/-qing-/p/11349134.html</a></p>\n<p>[2] <a href=\"https://payloads.online/archivers/2018-11-30/1\">https://payloads.online/archivers/2018-11-30/1</a></p>\n","categories":[],"tags":[{"name":"渗透, Windows域","slug":"渗透-Windows域","count":2,"path":"api/tags/渗透-Windows域.json"}]}