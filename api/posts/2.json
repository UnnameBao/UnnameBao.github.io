{"total":13,"pageSize":10,"pageCount":2,"data":[{"title":"关于python3中整数数组转bytes的效率问题","slug":"关于python3中整数数组转bytes的效率问题","date":"2017-11-26T06:10:06.000Z","updated":"2021-02-22T15:52:29.772Z","comments":true,"path":"api/articles/关于python3中整数数组转bytes的效率问题.json","excerpt":"","keywords":null,"cover":null,"content":"<p><a href=\"http://creativecommons.org/licenses/by-sa/4.0/\"> </a> 版权声明：本文为博主原创文章，遵循<a href=\"http://creativecommons.org/licenses/by-sa/4.0/\"> CC 4.0 BY-SA </a>版权协议，转载请附上原文出处链接和本声明。  本文链接：<a href=\"https://blog.csdn.net/s1054436218/article/details/78637048\">https://blog.csdn.net/s1054436218/article/details/78637048</a></p>\n<p>昨天在做一道CTF题的时候碰到了一个图片异或的问题，操作大概如下：</p>\n<p>将一个图片读入，然后每字节进行异或操作，核心代码可简化为以下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#coding:utf-8</span><br><span class=\"line\">&#39;&#39;&#39;</span><br><span class=\"line\">\t@DateTime: \t2017-11-25 13:51:33</span><br><span class=\"line\">\t@Version: \t1.0</span><br><span class=\"line\">\t@Author: \tUnname_Bao</span><br><span class=\"line\">&#39;&#39;&#39;</span><br><span class=\"line\">import six</span><br><span class=\"line\">key &#x3D; b&#39;\\xdcd~\\xb6^g\\x11\\xe1U7R\\x18!+9d\\xdcd~\\xb6^g\\x11\\xe1U7R\\x18!+9d&#39;</span><br><span class=\"line\">with open(&#39;flag.encrypted&#39;,&#39;rb&#39;) as f:</span><br><span class=\"line\">\tc &#x3D; f.read()</span><br><span class=\"line\">flag &#x3D; b&#39;&#39;</span><br><span class=\"line\">for i in range(32):</span><br><span class=\"line\">\tflag +&#x3D; six.int2byte(key[i%32]^c[i])</span><br><span class=\"line\">with open(&#39;flag.png&#39;,&#39;wb&#39;) as f:</span><br><span class=\"line\">\tf.write(flag)</span><br></pre></td></tr></table></figure>\n<p>然后就碰到了一个效率问题，跑了十几分钟都没有跑出结果，起初以为是类型转换的问题，因为比较急，于是换了成了C++的代码去解决，后来一直没多想。今天闲下来的时候才发现代码之前的代码中存在一个非常大的问题：内存申请问题。</p>\n<p>由于flag.encrypted文件大小为6.47MB之大，由于我的脚本思路是不断在byte数组后添加，但忽略了其本质。就是在内存申请过程中，由于数组长度最终为600+W大小，期间存在多次数组内存不够，需要重新申请内存的问题，而python中的内存申请显然没有C++的vector的push_back有效率。而且python中，无论是list、string还是byte，也没有reserve这种函数，不能预留内存空间（这时候真的要吐槽一下python设计者对速度优化的考量了）。于是只能用另一种方法进行优化，就是先用list申请一个需求大小的内存空间，然后再转为bytes使用，代码如下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#coding:utf-8</span><br><span class=\"line\">&#39;&#39;&#39;</span><br><span class=\"line\">\t@DateTime: \t2017-11-26 14:09:29</span><br><span class=\"line\">\t@Version: \t2.0</span><br><span class=\"line\">\t@Author: \tUnname_Bao</span><br><span class=\"line\">&#39;&#39;&#39;</span><br><span class=\"line\">key &#x3D; b&#39;\\xdcd~\\xb6^g\\x11\\xe1U7R\\x18!+9d\\xdcd~\\xb6^g\\x11\\xe1U7R\\x18!+9d&#39;</span><br><span class=\"line\">with open(&#39;flag.encrypted&#39;,&#39;rb&#39;) as f:</span><br><span class=\"line\">\tc &#x3D; f.read()</span><br><span class=\"line\">flag &#x3D; list(&#39;1&#39;*len(c))</span><br><span class=\"line\">for i in  range(len(c)):</span><br><span class=\"line\">\tflag[i] &#x3D; key[i%32]^c[i]</span><br><span class=\"line\">flag &#x3D; bytes(flag)</span><br><span class=\"line\">with open(&#39;flag.png&#39;,&#39;wb&#39;) as f:</span><br><span class=\"line\">\tf.write(flag)</span><br></pre></td></tr></table></figure>\n<p>这样写的话几乎是瞬间完成任务了，但还是比C++慢很多，这是不可避免的。</p>\n","text":"  版权声明：本文为博主原创文章，遵循 CC 4.0 BY-SA 版权协议，转载请附上原文出处链接和本声明。  本文链接：https://blog.csdn.net/s1054436218/article/details/78637048昨天在做一道CTF题的时候碰到了一个图片异","link":"","raw":null,"photos":[],"categories":[],"tags":[{"name":"CSDN迁移","slug":"CSDN迁移","count":6,"path":"api/tags/CSDN迁移.json"}]},{"title":"Python利用Socket实现文件上传和下载","slug":"Python利用Socket实现文件上传和下载","date":"2017-09-24T06:49:00.000Z","updated":"2021-02-22T15:52:29.772Z","comments":true,"path":"api/articles/Python利用Socket实现文件上传和下载.json","excerpt":"","keywords":null,"cover":null,"content":"<p><a href=\"http://creativecommons.org/licenses/by-sa/4.0/\"> </a> 版权声明：本文为博主原创文章，遵循<a href=\"http://creativecommons.org/licenses/by-sa/4.0/\"> CC 4.0 BY-SA </a>版权协议，转载请附上原文出处链接和本声明。  本文链接：<a href=\"https://blog.csdn.net/s1054436218/article/details/78076845\">https://blog.csdn.net/s1054436218/article/details/78076845</a></p>\n<p>第一次写Socket，大家见笑了。注释都很清楚，不多说了。</p>\n<p>值得一提的是中间碰到过一个bug是：</p>\n<p>unpack requires a bytes object of length</p>\n<p>百度了半天，某些博主扯了好多都没说清楚</p>\n<p>其实就是用struct打包了以后字符串流的大小会固定，但是你接收的大小跟你指定的编码方式不一样</p>\n<p>我这次出错是因为在发压缩包之前先发了个串，然后服务器接到的不是压缩的串所以出错了，所以unpack接收的必须是你pack后的串，不然会出错</p>\n<p>OK，以下是服务器端的代码：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#coding:utf-8</span><br><span class=\"line\">&#39;&#39;&#39;</span><br><span class=\"line\">\t@DateTime: \t2017-09-24 12:25:13</span><br><span class=\"line\">\t@Version: \t1.0</span><br><span class=\"line\">\t@Author: \tUnname_Max</span><br><span class=\"line\">&#39;&#39;&#39;</span><br><span class=\"line\">import threading</span><br><span class=\"line\">import socket</span><br><span class=\"line\">import time</span><br><span class=\"line\">import operator</span><br><span class=\"line\">import os</span><br><span class=\"line\">import struct</span><br><span class=\"line\"></span><br><span class=\"line\">#实现下载功能</span><br><span class=\"line\">def download(connect):</span><br><span class=\"line\">\t#获取文件目录</span><br><span class=\"line\">\tfiles &#x3D; os.listdir()</span><br><span class=\"line\">\t#用于传输文件目录的字符串</span><br><span class=\"line\">\tliststr &#x3D; &#39;&#39;</span><br><span class=\"line\">\t#将所有文件名传入字符串中</span><br><span class=\"line\">\tfor i in files:</span><br><span class=\"line\">\t\tliststr +&#x3D; i + &#39;\\n&#39;</span><br><span class=\"line\">\t#如果文件列表为空，将不继续执行下载任务</span><br><span class=\"line\">\tif operator.eq(liststr,&#39;&#39;): </span><br><span class=\"line\">\t\tconnect.send(&#39;&#39;.encode())</span><br><span class=\"line\">\t#如果文件列表不为空，开始下载任务</span><br><span class=\"line\">\telse :</span><br><span class=\"line\">\t\t#向客户端传送文件列表</span><br><span class=\"line\">\t\tconnect.send(liststr.encode())</span><br><span class=\"line\">\t\twhile  True:</span><br><span class=\"line\">\t\t\t#获取客户端要下载的文件名，如果不存在就继续输入</span><br><span class=\"line\">\t\t\tfilename &#x3D; connect.recv(100).decode()</span><br><span class=\"line\">\t\t\tif filename not in files:</span><br><span class=\"line\">\t\t\t\tconnect.send(&#39;文件不存在！&#39;.encode())</span><br><span class=\"line\">\t\t\telse:</span><br><span class=\"line\">\t\t\t\tconnect.send(&#39;开始文件传输！&#39;.encode())</span><br><span class=\"line\">\t\t\t\tbreak</span><br><span class=\"line\">\t\t#将文件信息打包发送给客服端</span><br><span class=\"line\">\t\tfhead &#x3D; struct.pack(&#39;128sI&#39;,filename.encode(),os.stat(filename).st_size)</span><br><span class=\"line\">\t\tconnect.send(fhead)</span><br><span class=\"line\">\t\t#传送文件信息</span><br><span class=\"line\">\t\twith open(filename,&#39;rb&#39;) as f:</span><br><span class=\"line\">\t\t\twhile True:</span><br><span class=\"line\">\t\t\t\tfiledata &#x3D; f.read(1024)</span><br><span class=\"line\">\t\t\t\tif not filedata:</span><br><span class=\"line\">\t\t\t\t\tbreak</span><br><span class=\"line\">\t\t\t\tconnect.send(filedata)</span><br><span class=\"line\">\t\t#存储到日志中</span><br><span class=\"line\">\t\tprint (&#39;%s\\n下载文件:\\n%s\\n成功\\n\\n&#39;%(time.strftime(&#39;%Y-%m-%d %H:%M:%S&#39;,time.localtime(time.time())),filename))</span><br><span class=\"line\">\t\tos.chdir(&#39;..&#39;)</span><br><span class=\"line\">\t\twith open(&#39;data.log&#39;,&#39;a&#39;) as f:</span><br><span class=\"line\">\t\t\tf.write(&#39;%s\\n下载文件:\\n%s\\n成功\\n\\n&#39;%(time.strftime(&#39;%Y-%m-%d %H:%M:%S&#39;,time.localtime(time.time())),filename))</span><br><span class=\"line\">\t\tos.chdir(&#39;files&#39;)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">#实现上传功能</span><br><span class=\"line\">def upload(connect):</span><br><span class=\"line\">\tFILEINFO_SIZE &#x3D; struct.calcsize(&#39;128sI&#39;)</span><br><span class=\"line\">\ttry:</span><br><span class=\"line\">\t\t#获取打包好的文件信息，并解包</span><br><span class=\"line\">\t\tfhead &#x3D; connect.recv(FILEINFO_SIZE)</span><br><span class=\"line\">\t\tfilename , filesize &#x3D; struct.unpack(&#39;128sI&#39;,fhead)</span><br><span class=\"line\">\t\tfilename &#x3D; filename.decode().strip(&#39;\\00&#39;)</span><br><span class=\"line\">\t\t#文件名必须去掉\\00，否则会报错，此处为接收文件</span><br><span class=\"line\">\t\twith open (&#39;newnew_&#39;+ filename,&#39;wb&#39;) as f:</span><br><span class=\"line\">\t\t\tressize &#x3D; filesize</span><br><span class=\"line\">\t\t\twhile True:</span><br><span class=\"line\">\t\t\t\tif ressize&gt;1024:</span><br><span class=\"line\">\t\t\t\t\tfiledata &#x3D; connect.recv(1024)</span><br><span class=\"line\">\t\t\t\telse:</span><br><span class=\"line\">\t\t\t\t\tfiledata &#x3D; connect.recv(ressize)</span><br><span class=\"line\">\t\t\t\t\tf.write(filedata)</span><br><span class=\"line\">\t\t\t\t\tbreak</span><br><span class=\"line\">\t\t\t\tif not filedata:</span><br><span class=\"line\">\t\t\t\t\tbreak</span><br><span class=\"line\">\t\t\t\tf.write(filedata)</span><br><span class=\"line\">\t\t\t\tressize &#x3D; ressize - len(filedata)</span><br><span class=\"line\">\t\t\t\tif ressize &lt;0:</span><br><span class=\"line\">\t\t\t\t\tbreak</span><br><span class=\"line\">\t\t#存储到日志</span><br><span class=\"line\">\t\tprint (&#39;%s\\n传输文件:\\n%s\\n成功\\n\\n&#39;%(time.strftime(&#39;%Y-%m-%d %H:%M:%S&#39;,time.localtime(time.time())),filename))</span><br><span class=\"line\">\t\tos.chdir(&#39;..&#39;)</span><br><span class=\"line\">\t\twith open(&#39;data.log&#39;,&#39;a&#39;) as f:</span><br><span class=\"line\">\t\t\tf.write(&#39;%s\\n传输文件:\\n%s\\n成功\\n\\n&#39;%(time.strftime(&#39;%Y-%m-%d %H:%M:%S&#39;,time.localtime(time.time())),filename))</span><br><span class=\"line\">\t\tos.chdir(&#39;files&#39;)</span><br><span class=\"line\">\texcept Exception as e:</span><br><span class=\"line\">\t\tprint (&#39;%s\\n传输文件:\\n%s\\n成功\\n\\n&#39;%(time.strftime(&#39;%Y-%m-%d %H:%M:%S&#39;,time.localtime(time.time())),filename))</span><br><span class=\"line\">\t\tos.chdir(&#39;..&#39;)</span><br><span class=\"line\">\t\twith open(&#39;data.log&#39;,&#39;a&#39;) as f:</span><br><span class=\"line\">\t\t\tf.write(&#39;%s\\n传输文件:\\n%s\\n失败\\n\\n&#39;%(time.strftime(&#39;%Y-%m-%d %H:%M:%S&#39;,time.localtime(time.time())),filename))</span><br><span class=\"line\">\t\tos.chdir(&#39;files&#39;)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">def handle(connect,address):</span><br><span class=\"line\">\tprint (&#39;%s:%s is connectting...&#39;%(address))</span><br><span class=\"line\">\twhile True:</span><br><span class=\"line\">\t\torder &#x3D; connect.recv(100).decode()</span><br><span class=\"line\">\t\tif operator.eq(order,&#39;1&#39;):</span><br><span class=\"line\">\t\t\tdownload(connect)</span><br><span class=\"line\">\t\telif operator.eq(order,&#39;2&#39;):</span><br><span class=\"line\">\t\t\tupload(connect)</span><br><span class=\"line\">\t\telif operator.eq(order,&#39;3&#39;):</span><br><span class=\"line\">\t\t\tconnect.close()</span><br><span class=\"line\">\t\t\tbreak</span><br><span class=\"line\">\t\tconnect.send(&#39;&#39;&#39;</span><br><span class=\"line\">1、 下载文件</span><br><span class=\"line\">2、 上传文件</span><br><span class=\"line\">3、 退出</span><br><span class=\"line\">\t\t\t&#39;&#39;&#39;.encode())</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">if __name__ &#x3D;&#x3D; &#39;__main__&#39;:</span><br><span class=\"line\">\tif not os.path.exists(&#39;files&#39;):</span><br><span class=\"line\">\t\tos.mkdir(&#39;files&#39;)</span><br><span class=\"line\">\t#工作目录换到files文件夹</span><br><span class=\"line\">\tos.chdir(&#39;files&#39;)</span><br><span class=\"line\">\t#建立socket链接，并监听8002端口</span><br><span class=\"line\">\tsock &#x3D; socket.socket(socket.AF_INET,socket.SOCK_STREAM)</span><br><span class=\"line\">\tsock.bind((&#39;&#39;,8002))</span><br><span class=\"line\">\tsock.listen(100)</span><br><span class=\"line\">\twhile True:</span><br><span class=\"line\">\t\tconnect,address &#x3D; sock.accept()</span><br><span class=\"line\">\t\tconnect.send(&#39;&#39;&#39;欢迎使用文件管理服务器，您已经成功连接，请选择您要选用的选项：</span><br><span class=\"line\">1、 下载文件</span><br><span class=\"line\">2、 上传文件</span><br><span class=\"line\">3、 退出</span><br><span class=\"line\">\t\t\t&#39;&#39;&#39;.encode())</span><br><span class=\"line\">\t\tt &#x3D; threading.Thread(target &#x3D; handle,args &#x3D; (connect,address))</span><br><span class=\"line\">\t\tt.setDaemon(True)</span><br><span class=\"line\">\t\tt.start()</span><br><span class=\"line\">\tsock.close()</span><br></pre></td></tr></table></figure>\n<p>以下是客户端的代码：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#coding:utf-8</span><br><span class=\"line\">&#39;&#39;&#39;</span><br><span class=\"line\">\t@DateTime: \t2017-09-24 14:26:31</span><br><span class=\"line\">\t@Version: \t1.0</span><br><span class=\"line\">\t@Author: \tUnname_Max</span><br><span class=\"line\">&#39;&#39;&#39;</span><br><span class=\"line\">import socket</span><br><span class=\"line\">import struct</span><br><span class=\"line\">import operator</span><br><span class=\"line\">import time</span><br><span class=\"line\">import os</span><br><span class=\"line\">#实现下载功能</span><br><span class=\"line\">def download(sock):</span><br><span class=\"line\">\t#从服务端接收文件列表</span><br><span class=\"line\">\tfilelist &#x3D; sock.recv(1024).decode()</span><br><span class=\"line\">\tif operator.eq(filelist,&#39;&#39;):</span><br><span class=\"line\">\t\tprint (&#39;没有可以下载的文件&#39;)</span><br><span class=\"line\">\tprint (filelist)</span><br><span class=\"line\">\t#从用户中输入接收文件名，并发送给服务端</span><br><span class=\"line\">\tfilename  &#x3D; input(&#39;请输入要下载的文件名:\\n&#39;)</span><br><span class=\"line\">\tsock.send(filename.encode())</span><br><span class=\"line\">\t#获取包大小，并解压</span><br><span class=\"line\">\tFILEINFO_SIZE &#x3D; struct.calcsize(&#39;128sI&#39;)</span><br><span class=\"line\">\ttry:</span><br><span class=\"line\">\t\tfhead &#x3D; sock.recv(1024)</span><br><span class=\"line\">\t\tfhead &#x3D; sock.recv(FILEINFO_SIZE)</span><br><span class=\"line\">\t\tfilename , filesize &#x3D; struct.unpack(&#39;128sI&#39;,fhead)</span><br><span class=\"line\">\t\t#接收文件</span><br><span class=\"line\">\t\twith open (&#39;new_&#39;+filename.decode().strip(&#39;\\00&#39;),&#39;wb&#39;) as f:</span><br><span class=\"line\">\t\t\tressize &#x3D; filesize</span><br><span class=\"line\">\t\t\twhile True:</span><br><span class=\"line\">\t\t\t\tif ressize&gt;1024:</span><br><span class=\"line\">\t\t\t\t\tfiledata &#x3D; sock.recv(1024)</span><br><span class=\"line\">\t\t\t\telse:</span><br><span class=\"line\">\t\t\t\t\tfiledata &#x3D; sock.recv(ressize)</span><br><span class=\"line\">\t\t\t\t\tf.write(filedata)</span><br><span class=\"line\">\t\t\t\t\tbreak</span><br><span class=\"line\">\t\t\t\tif not filedata:</span><br><span class=\"line\">\t\t\t\t\tbreak</span><br><span class=\"line\">\t\t\t\tf.write(filedata)</span><br><span class=\"line\">\t\t\t\tressize &#x3D; ressize - len(filedata)</span><br><span class=\"line\">\t\t\t\tif ressize &lt;0:</span><br><span class=\"line\">\t\t\t\t\tbreak</span><br><span class=\"line\">\t\tprint (&#39;文件传输成功!&#39;)</span><br><span class=\"line\">\texcept Exception as e:</span><br><span class=\"line\">\t\tprint (e)</span><br><span class=\"line\">\t\tprint (&#39;文件传输失败!&#39;)</span><br><span class=\"line\">#实现上传功能</span><br><span class=\"line\">def upload(sock):</span><br><span class=\"line\">\t#获取文件路径，并将文件信息打包发送给服务端</span><br><span class=\"line\">\tpath &#x3D; input(&#39;请输入要上传的文件路径\\n&#39;)</span><br><span class=\"line\">\tfilename &#x3D; input(&#39;请输入文件名\\n&#39;)</span><br><span class=\"line\">\tfhead &#x3D; struct.pack(&#39;128sI&#39;,filename.encode(),os.stat(filename).st_size)</span><br><span class=\"line\">\tsock.send(fhead)</span><br><span class=\"line\">\t#传送文件</span><br><span class=\"line\">\twith open (path,&#39;rb&#39;) as f:</span><br><span class=\"line\">\t\twhile True:</span><br><span class=\"line\">\t\t\tfiledata &#x3D; f.read(1024)</span><br><span class=\"line\">\t\t\tif not filedata:</span><br><span class=\"line\">\t\t\t\tbreak</span><br><span class=\"line\">\t\t\tsock.send(filedata)</span><br><span class=\"line\">\tprint(&#39;文件传输结束&#39;)</span><br><span class=\"line\"></span><br><span class=\"line\">def  handle(sock):</span><br><span class=\"line\">\twhile True:</span><br><span class=\"line\">\t\torder &#x3D; input()</span><br><span class=\"line\">\t\tif operator.eq(order,&#39;1&#39;):</span><br><span class=\"line\">\t\t\tsock.send(order.encode())</span><br><span class=\"line\">\t\t\tdownload(sock)</span><br><span class=\"line\">\t\telif operator.eq(order,&#39;2&#39;):</span><br><span class=\"line\">\t\t\tsock.send(order.encode())</span><br><span class=\"line\">\t\t\tupload(sock)</span><br><span class=\"line\">\t\telif operator.eq(order,&#39;3&#39;):</span><br><span class=\"line\">\t\t\tprint(&#39;正在关闭连接...&#39;)</span><br><span class=\"line\">\t\t\ttime.sleep(0.5)</span><br><span class=\"line\">\t\t\tsock.send(order.encode())</span><br><span class=\"line\">\t\t\tbreak</span><br><span class=\"line\">\t\telse:</span><br><span class=\"line\">\t\t\tprint(&#39;命令错误,请重新输入！&#39;)</span><br><span class=\"line\">\t\t\tcontinue</span><br><span class=\"line\">\t\tline &#x3D; sock.recv(1024)</span><br><span class=\"line\">\t\tprint(line.decode())</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">if __name__ &#x3D;&#x3D; &#39;__main__&#39;:</span><br><span class=\"line\">\t#建立socket并连接8002端口</span><br><span class=\"line\">\tsock &#x3D; socket.socket(socket.AF_INET,socket.SOCK_STREAM)</span><br><span class=\"line\">\tsock.connect((&#39;127.0.0.1&#39;,8002))</span><br><span class=\"line\">\tline &#x3D; sock.recv(1024)</span><br><span class=\"line\">\tprint(line.decode())</span><br><span class=\"line\">\thandle(sock)</span><br><span class=\"line\">\tsock.close()</span><br></pre></td></tr></table></figure>\n","text":"  版权声明：本文为博主原创文章，遵循 CC 4.0 BY-SA 版权协议，转载请附上原文出处链接和本声明。  本文链接：https://blog.csdn.net/s1054436218/article/details/78076845第一次写Socket，大家见笑了。注释都很","link":"","raw":null,"photos":[],"categories":[],"tags":[{"name":"CSDN迁移","slug":"CSDN迁移","count":6,"path":"api/tags/CSDN迁移.json"}]},{"title":"Python3.6安装pycrypto2.61","slug":"Python3.6安装pycrypto2.61","date":"2017-09-20T11:32:01.000Z","updated":"2021-02-22T15:52:29.772Z","comments":true,"path":"api/articles/Python3.6安装pycrypto2.61.json","excerpt":"","keywords":null,"cover":"../../../../image/31.png","content":"<p><a href=\"http://creativecommons.org/licenses/by-sa/4.0/\"> </a> 版权声明：本文为博主原创文章，遵循<a href=\"http://creativecommons.org/licenses/by-sa/4.0/\"> CC 4.0 BY-SA </a>版权协议，转载请附上原文出处链接和本声明。  本文链接：<a href=\"https://blog.csdn.net/s1054436218/article/details/78044524\">https://blog.csdn.net/s1054436218/article/details/78044524</a></p>\n<p>本来以为自己的Python3.6早就装好了pycrypto，结果发现只是装在了自己的python2.7，因为想要用python3开发后台，利用pycrypto会省很多事儿，于是pip install pycrypto。</p>\n<p>后来会报错误：</p>\n<p>error: command ‘C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\BIN\\x86_amd64\\cl.exe’ failed with exit status 1158 command ‘C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\BIN\\x86_amd64\\cl.exe’ failed with exit status 2</p>\n<p>然后百度了半天都是瞎扯的，在google上搜到了一个解决方法（假设本机安装了Microsoft Visual Studio2017 Community版）：</p>\n<p>第一步：将D:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Community\\VC\\Tools\\MSVC\\14.10.25017\\include\\stdint.h文件拷贝到C:\\Program Files (x86)\\Windows Kits\\10\\Include\\10.0.15063.0\\ucrt\\目录下</p>\n<p>第二步：修改C:\\Program Files (x86)\\Windows Kits\\10\\Include\\10.0.15063.0\\ucrt\\inttypes.h中的第13行，将</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#include &lt;stdint.h&gt;</span><br></pre></td></tr></table></figure>\n<p>修改为：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#include &quot;stdint.h&quot;</span><br></pre></td></tr></table></figure>\n<p>然后再次安装，出现了新问题：</p>\n<p>error: command ‘C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\BIN\\x86_amd64\\link.exe’ failed with exit status 1158</p>\n<p>然后继续google之，一个外国朋友给了一个解决方法：</p>\n<p>第一步：将C:\\Program Files (x86)\\Windows Kits\\10\\bin\\x64 加入path</p>\n<p>第二部：将rc.exe和rcdll.dll两个文件从</p>\n<p>C:\\Program Files (x86)\\Windows Kits\\8.1\\bin\\x86</p>\n<p>复制到</p>\n<p>C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\bin</p>\n<p>到此，我已经安装成功了，可是import的时候又出现问题：</p>\n<p>ModuleNotFoundError: No module named ‘Crypto’</p>\n<p>原来是因为安装过crypto，再安装pycrypto的时候就会 有冲突，于是卸载掉两个，重新安装pycrypto，新的问题又出现了：</p>\n<p>ModuleNotFoundError: No module named winrandom</p>\n<p>这次百度解决了：</p>\n<p>修改python3安装目录下的 lib/Crypto/Random/OSRNG/nt.py 文件中找到</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import winrandom</span><br></pre></td></tr></table></figure>\n<p>修改为：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">from Crypto.Random.OSRNG import winrandom</span><br></pre></td></tr></table></figure>\n<p>OK，到此就解决全部问题了！~ <img src=\"../../../../image/31.png\" alt=\"\" /></p>\n","text":"  版权声明：本文为博主原创文章，遵循 CC 4.0 BY-SA 版权协议，转载请附上原文出处链接和本声明。  本文链接：https://blog.csdn.net/s1054436218/article/details/78044524本来以为自己的Python3.6早就装好了","link":"","raw":null,"photos":[],"categories":[],"tags":[{"name":"CSDN迁移","slug":"CSDN迁移","count":6,"path":"api/tags/CSDN迁移.json"}]}]}